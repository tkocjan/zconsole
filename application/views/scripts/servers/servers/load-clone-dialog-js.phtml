<script id="cloneScript">
    var errorClassName = "error";
    var validClassName = "valid";
    var loadingClassName = "ui-icon-loading";
//    var jqFields = $(":text", "#rename_server_form");
//    var jqlabels = $("label[for]", "#rename_server_form");
    //var jqFields = $("#rename_server_form :text");
    var jqLabels = $("#cloneServerForm label[for]");
    var jqForm = $("#cloneServerForm");
    var jqServerName = $("#cloneServerName");
    var jqPublicDNS = $("#clonePublicDNS");
    var jqFields = jqServerName.add(jqPublicDNS);
    
    //$(".rename_server_link").on('click', function(event){
    function cloneDialog() {
        jqFields.addClass(validClassName).removeClass(errorClassName).removeClass(loadingClassName)
            .attr("title", "");
        jqLabels.removeClass(errorClassName);
        jqForm.dialog({
            width: 700,
            modal: true,
            buttons: {
                "Cancel": function(){jqForm.dialog("destroy");},
                "Ok": waitCheckName
            }
        });

        var secs=0, maxSecs=10;
        function waitCheckName(){
            //if (!jqForm.dialog("isOpen")) { // causes exception... which is kind of ok
            //if form destroyed
            if ( !jqForm.is(':data(dialog)') ) {
                secs=0;
                alert("Form canceled!");
                return;
            }
            //jqForm.dialog("disable");
            //if done loading
            if (!jqFields.hasClass(loadingClassName)) {
                secs=0;
                checkAndUpdateNames();
                return;
            }
            secs++;

            //if max reached
            if (secs >= maxSecs) {
                secs=0;
                alert("waitCheckName: Timed out");
                //jqForm.dialog("enable");
                return;
            }
            //max has not been reached, set another timeout
            setTimeout(waitCheckName, 1000);
        }
        
        function checkAndUpdateNames(){
            //if any field errors
            if (jqFields.hasClass(errorClassName) ) {
                alert("Please correct the errors on this form!");
                //jqForm.dialog("enable");
                return;
            }
            console.log("Form valid");
            
            jWaiting(		
                'Launching Server...',
		{
		  autoHide : false, // added in v2.0
		  clickOverlay : false, // added in v2.0
		  HorizontalPosition : 'center',
		  VerticalPosition : 'center',
		  ShowOverlay : true
                }
            );
            
            $.ajax({
                type: "post",
                url: "<?=$app_path?>/ajax/clone-server",
                data: {
                    serverId: <?=$viewData->serverRec->id?>,
                    serverName: jqServerName.val(),
                    publicDNS: jqPublicDNS.val()
                },
                dataType: "json",
                timeout: 10000,
                success: function(data) {
                    if (data.success != true) {
                        $.jNotify._close();
                        alert("cloneServer: Server returned false");
                        return;
                    }
                    location.assign('<?=$app_path?>/servers');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    $.jNotify._close();
                    alert("cloneServer: Ajax failure");
                    return;
                }
            });            
        }
    }

    jqForm.validate({
        debug: true,
        errorElement: "span",
        errorClass: errorClassName,
        validClass: validClassName,        
        onfocusout: function(element){  // had to add when I disabled onkeyup
            // make OK until ajax
            //$("#"+element.id + "_Hidden").val( $(element).val() );
            $(element).valid();
        },
        onkeyup: function(element){
            console.log("onkeyup");
            console.log(element);
            $(element).removeClass(errorClassName).removeClass(validClassName).removeClass(loadingClassName);
        },
        errorPlacement: errorPlacement,
        highlight: highlight,
        unhighlight: unhighlight
    });
    
    function errorPlacement(error, element) {
        console.log("errorPlacement: element = ");
        console.log(element);
        $(element).attr("title", $(error).html());
    }
    
    function highlight(element, errorClass, validClass) {
        console.log("highlight: id=" + element.id + " errorClass="+errorClass+" validClass="+validClass);
        $(element).addClass(errorClassName).removeClass(validClassName).removeClass(loadingClassName);
        $("label[for=" + element.id + "]", element.form).addClass(errorClass);
    }

    function unhighlight(element, errorClass, validClass, doAjax) { // added doAjax to normal args
        console.log("unhighlight: id=" + element.id+" errorClass="+errorClass+" validClass="+validClass);
        var saveElement = element;
        if (typeof(doAjax)==='undefined') doAjax = true;

        $(element).attr("title", "");
        $(element).removeClass(errorClassName).removeClass(loadingClassName).addClass(validClassName);
        $(element.form).find("label[for=" + element.id + "]")
                        .removeClass(errorClassName);
                        
        //if value not changed, no need to ajax
        if (element.value == element.defaultValue)
            return; 

        //if ajax response called unhighlight, don't do again
        if (!doAjax)
            return;
        
        $(element).addClass(loadingClassName);
        // ajax to see if taken
        $.ajax({
            type: "get",
            url: "<?=$app_path?>/ajax/check-name",
            data: {
                form: "clone",
                serverId: selServerId,
                field: element.getAttribute('field'),
                value: element.value
            },
            dataType: "json",
            timeout: 10000,
            success: function(data) {
                console.log("success: field="+data.field+" error="+data.error);
                if (data.error == "")
                    unhighlight(saveElement, errorClassName, validClassName, false);
                else {
                    highlight(saveElement, errorClassName, validClassName);
                    //errorPlacement expects error in tags
                    errorPlacement("<span>"+data.error+"</span>", saveElement);
                }
            }
            /*
            error: function(jqXHR, textStatus, errorThrown) {
                alert("checkName: Ajax failure: "+textStatus);
            }
            */
        });
    }

</script>
